[{"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\index.js":"1","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\reportWebVitals.js":"2","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\App.js":"3","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\LibraryManagementSystem.js":"4","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\index.js":"5","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Home.js":"6","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Logout.js":"7","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Login.js":"8","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Routing\\PublicRoute.js":"9","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Routing\\PrivateRoute.js":"10","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\stateReducers.js":"11","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\actionCreators.js":"12","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\modelReducer.js":"13","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\RestServices\\RestMiddleWare.js":"14","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\UsersTable.js":"15","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Profiles.js":"16","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\BooksTable.js":"17","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\stateActions.js":"18","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\ToggleLink.js":"19","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Header.js":"20","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\LoginForm.js":"21","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\SideNav.js":"22","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Button.js":"23","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\initialData.js":"24","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\dataTypes.js":"25","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\actionTypes.js":"26","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\index.js":"27","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\RestServices\\RestDataSource.js":"28","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Table.js":"29","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Controls.js":"30","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Select.js":"31","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\server\\serverURL.js":"32","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\SearchIcon.js":"33","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\TableContent.js":"34","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\UserRegistrationForm.js":"35","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\CheckBox.js":"36","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Radio.js":"37","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\UserDescription.js":"38","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\BookDescription.js":"39","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\ConfirmationCheck.js":"40","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\Rating.js":"41","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\StyledTableRow.js":"42","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Form.js":"43","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Input.js":"44"},{"size":246,"mtime":1607942223741,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":313,"mtime":1608025476344,"results":"48","hashOfConfig":"46"},{"size":855,"mtime":1608025880172,"results":"49","hashOfConfig":"46"},{"size":454,"mtime":1608030119377,"results":"50","hashOfConfig":"46"},{"size":5524,"mtime":1608036102917,"results":"51","hashOfConfig":"46"},{"size":896,"mtime":1608030706642,"results":"52","hashOfConfig":"46"},{"size":905,"mtime":1607758260051,"results":"53","hashOfConfig":"46"},{"size":288,"mtime":1607760498249,"results":"54","hashOfConfig":"46"},{"size":382,"mtime":1607950418110,"results":"55","hashOfConfig":"46"},{"size":826,"mtime":1608029862359,"results":"56","hashOfConfig":"46"},{"size":815,"mtime":1608030140131,"results":"57","hashOfConfig":"46"},{"size":1262,"mtime":1608029845555,"results":"58","hashOfConfig":"46"},{"size":6515,"mtime":1608031623843,"results":"59","hashOfConfig":"46"},{"size":58,"mtime":1607846314248,"results":"60","hashOfConfig":"46"},{"size":56,"mtime":1607846402554,"results":"61","hashOfConfig":"46"},{"size":1247,"mtime":1608037537965,"results":"62","hashOfConfig":"46"},{"size":402,"mtime":1607822698113,"results":"63","hashOfConfig":"46"},{"size":804,"mtime":1608030579394,"results":"64","hashOfConfig":"46"},{"size":3944,"mtime":1608006441565,"results":"65","hashOfConfig":"46"},{"size":4962,"mtime":1607844749169,"results":"66","hashOfConfig":"46"},{"size":1059,"mtime":1608030642108,"results":"67","hashOfConfig":"46"},{"size":473,"mtime":1607747988371,"results":"68","hashOfConfig":"46"},{"size":509,"mtime":1607828770351,"results":"69","hashOfConfig":"46"},{"size":332,"mtime":1607828759524,"results":"70","hashOfConfig":"46"},{"size":95,"mtime":1607767811448,"results":"71","hashOfConfig":"46"},{"size":70,"mtime":1607748391373,"results":"72","hashOfConfig":"46"},{"size":7056,"mtime":1608030482948,"results":"73","hashOfConfig":"46"},{"size":7617,"mtime":1608038577862,"results":"74","hashOfConfig":"46"},{"size":312,"mtime":1607747988647,"results":"75","hashOfConfig":"46"},{"size":798,"mtime":1607958151930,"results":"76","hashOfConfig":"46"},{"size":558,"mtime":1607826721735,"results":"77","hashOfConfig":"46"},{"size":1930,"mtime":1608030523663,"results":"78","hashOfConfig":"46"},{"size":9278,"mtime":1609825334416,"results":"79","hashOfConfig":"46"},{"size":4546,"mtime":1607849642237,"results":"80","hashOfConfig":"46"},{"size":559,"mtime":1607747988503,"results":"81","hashOfConfig":"46"},{"size":616,"mtime":1607747989395,"results":"82","hashOfConfig":"46"},{"size":3171,"mtime":1608029560231,"results":"83","hashOfConfig":"46"},{"size":3388,"mtime":1608008412060,"results":"84","hashOfConfig":"46"},{"size":1240,"mtime":1608035332742,"results":"85","hashOfConfig":"46"},{"size":907,"mtime":1608033978462,"results":"86","hashOfConfig":"46"},{"size":408,"mtime":1607941432016,"results":"87","hashOfConfig":"46"},{"size":108,"mtime":1607747988819,"results":"88","hashOfConfig":"46"},{"size":614,"mtime":1607758178839,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1puf9vy",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\index.js",[],["189","190"],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\reportWebVitals.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\App.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\LibraryManagementSystem.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\index.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Home.js",["191","192","193","194"],"import Header from './Header';\r\nimport { useSelector } from \"react-redux\";\r\nimport PrivateRoute from \"./Routing/PrivateRoute\";\r\nimport BooksTable from \"./BooksTable\";\r\nimport UsersTable from \"./UsersTable\";\r\nimport Profile from \"./Profiles\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Badge, Grid, IconButton, makeStyles, Toolbar } from \"@material-ui/core\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n\r\nimport ToggleLink from './ToggleLink';\r\nimport { useEffect } from 'react';\r\nconst Home = (props) => {\r\n\r\n    const books = useSelector(state => state.modelData.bookstore);\r\n    const userid = useSelector(state => state.stateData.currentuser);\r\n    const role = useSelector(state => state.stateData.role);\r\n    const users = useSelector(state => state.modelData.users);\r\n    \r\n    let totalusers = 0;\r\n    if(users[0] !== undefined){\r\n        totalusers = users[0].length;\r\n    }\r\n    let totalbooks = books.length;\r\n    let availablebooks = books.filter(p => p.status === \"Available\").length;\r\n    let reservedbooks = books.filter(p => p.status === \"Reserved\").filter(p => p.userid === userid).length;\r\n    let checkedout = books.filter(p => p.status === \"Checked Out\").filter(p => p.userid === userid).length;\r\n    let totalreservedbooks = books.filter(p => p.status === \"Reserved\").length;\r\n    let totalcheckout = books.filter(p => p.status === \"Checked Out\").length;\r\n\r\n\r\n    return <>\r\n        <Header />\r\n        <div>\r\n            <div>\r\n                <Toolbar>\r\n                    <Grid container>\r\n                        <Grid item sm={2}></Grid>\r\n                        <Grid item xs={12} sm={3} >{role === \"user\" ? <ToggleLink to=\"/home/bookstore\">\r\n                            <IconButton>\r\n                                <Badge badgeContent={availablebooks} color=\"primary\">\r\n                                    <StoreIcon />\r\n                                </Badge>\r\n                            </IconButton>Available Books\r\n                            </ToggleLink> : <ToggleLink to=\"/home/librarian/statuscheck\" >\r\n                                <IconButton>\r\n                                    <Badge badgeContent={sum(totalreservedbooks, totalcheckout)} color=\"primary\">\r\n                                        <StorageIcon />\r\n                                    </Badge>\r\n                                </IconButton>Status\r\n                            </ToggleLink>}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            {role === \"user\" ? <ToggleLink to=\"/home/reserved\">\r\n                                <IconButton> <Badge badgeContent={reservedbooks} color=\"primary\">\r\n                                    <FavoriteIcon />\r\n                                </Badge>\r\n                                </IconButton>Your Reserved\r\n</ToggleLink> : <ToggleLink to=\"/home/librarian/bookstore\">\r\n                                <IconButton><Badge badgeContent={totalbooks} color=\"primary\">\r\n                                    <StoreIcon />\r\n                                </Badge>\r\n                                </IconButton>All Books\r\n            </ToggleLink> } \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            {role === \"user\" ? <ToggleLink to=\"/home/checked\">\r\n                                <IconButton><Badge badgeContent={checkedout} color=\"primary\">\r\n                                    <ShoppingBasketIcon />\r\n                                </Badge>\r\n                                </IconButton>Check Out\r\n            </ToggleLink> : <ToggleLink to=\"/home/librarian/users\">\r\n                                <IconButton><Badge badgeContent={totalusers} color=\"primary\">\r\n                                    <GroupIcon />\r\n                                </Badge>\r\n                                </IconButton>Users\r\n            </ToggleLink>} \r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <PrivateRoute path={`${props.match.url}/bookstore`} authenticated={true} category=\"Available\" component={BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/reserved`} authenticated={true} category=\"Reserved\" component={BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/checked`} authenticated={true} category=\"Checked Out\" component={BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/librarian/statuscheck`} authenticated = {true} category = \"status\" component = {BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/librarian/bookstore`} authenticated = {true} category = \"allbooks\" component = {BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/librarian/users`} authenticated={true} category = \"users\" component={BooksTable} />\r\n            <PrivateRoute path={`${props.match.url}/profile`} authenticated={true} component={Profile} />\r\n{role === \"user\" ? <Redirect to=\"/home/bookstore\" /> : <Redirect to = \"/home/librarian/statuscheck\" /> } \r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\nconst sum = (s1, s2) => {\r\n    let p1 = parseInt(s1);\r\n    let p2 = parseInt(s2);\r\n    return p1 + p2;\r\n}","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Logout.js",["195"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Backdrop, Typography } from '@material-ui/core';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closeAuthentication} from \"../store/stateActions\";\r\nconst useStyles = makeStyles({\r\n    root : {\r\n        size : \"50\"\r\n    }\r\n})\r\nconst Logout = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect( ()=>{\r\n        \r\n        setTimeout( ()=>{ dispatch(closeAuthentication()); }, 3000);\r\n     },[]);\r\n    const classes = useStyles();\r\n    return <>\r\n    <Backdrop className={classes.backdrop} open={true} >\r\n    <CircularProgress color=\"inherit\" />\r\n    <Typography variant = \"h5\" component = \"h1\" >\r\n        &nbsp;Logging out.....\r\n    </Typography>\r\n    </Backdrop>\r\n    </>\r\n}\r\n\r\nexport default Logout;\r\n\r\n","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Login.js",["196","197","198","199","200","201","202","203","204","205","206","207","208"],"import FormControls from \"./Controls\";\r\nimport {Avatar, Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, IconButton, makeStyles, Paper} from \"@material-ui/core\";\r\nimport SideNav from \"./SideNav\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport Button from \"./Controls/Button\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor : '#64b5f6'\r\n    },\r\n    container : {\r\n        marginLeft : \"30%\",\r\n        padding : \"15%\",\r\n        paddingTop : \"7%\",\r\n        paddingBottom : \"0\"\r\n        \r\n    }\r\n}))\r\n\r\nexport default function Login(){\r\n    const classes = useStyles();\r\n    return <>\r\n            <SideNav />\r\n            <div className = {classes.container}>\r\n                <LoginForm />\r\n            </div>\r\n            </>\r\n}","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Routing\\PublicRoute.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Routing\\PrivateRoute.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\stateReducers.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\actionCreators.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\modelReducer.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\RestServices\\RestMiddleWare.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\UsersTable.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Profiles.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\BooksTable.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\stateActions.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\ToggleLink.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Header.js",["209","210","211","212","213","214","215"],"import React from \"react\";\r\nimport {AppBar, Toolbar,Grid, Typography, IconButton, makeStyles, Badge, Accordion, AccordionSummary, AccordionDetails, Menu, MenuItem} from \"@material-ui/core\";\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ExpandMoreIcon} from '@material-ui/icons/ExpandMore';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root : {\r\n      flexGrow : 1,\r\n      verticalAlign: \"middle\"\r\n      },\r\n  appbar: {\r\n    backgroundColor : \"#cfd8dc\"\r\n  },\r\n  homeicon : {\r\n      marginRight : theme.spacing(10)\r\n  },\r\n  title : {\r\n      flexGrow : 1,\r\n      fontSize : theme.spacing(3),\r\n      paddingTop : theme.spacing(1),\r\n      color : \"#ff9100\"\r\n     \r\n  },\r\n  content : {\r\n    flexGrow : 1,\r\n    textAlign : \"right\",\r\n    paddingTop : theme.spacing(2),\r\n    color : \"#ff9100\"\r\n  },\r\n  icon : {\r\n      fontSize : theme.spacing(4),\r\n      \r\n  }\r\n\r\n}));\r\n\r\nconst Header = (props) =>{\r\n\r\nconst [profileMenu,setProfileMenu] = React.useState(null);\r\nconst userid = useSelector(state => state.stateData.currentuser);\r\nconst users = useSelector(state => state.modelData.users);\r\nconst role = useSelector(state=> state.stateData.role);\r\nconst librarian = useSelector(state => state.modelData.librarian);\r\nconsole.log(role);\r\nconsole.log(users);\r\nlet currentuser = {id : \"\",firstname : \"\",lastname : \"\"};\r\nif(role === \"user\"){\r\n   currentuser = users.find(p => p.id === userid);\r\n}else{\r\n    console.log(librarian);\r\n    currentuser = librarian.find(p => p.id === userid)\r\n}\r\n\r\nconsole.log(currentuser);\r\n\r\n\r\nconst handleClick = (event) => {\r\n    setProfileMenu(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setProfileMenu(null);\r\n  };\r\n\r\nconst classes = useStyles();\r\n\r\nreturn <div className = {classes.root}>\r\n  <AppBar className = {classes.appbar} position = \"relative\"> \r\n        <Toolbar>\r\n            <Grid container>\r\n                <Grid item sm={1} xs = {4} >\r\n                        <IconButton edge=\"start\" className = {classes.homeicon} >\r\n                            <ImportContactsIcon className = {classes.icon}/>\r\n                        </IconButton>\r\n                </Grid>\r\n                <Grid item sm>\r\n                    <Typography variant = \"h6\" className = {classes.title} >\r\n                        Welcome To Library\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item sm= {5}>\r\n                       {currentuser !== undefined && <Typography variant = \"subtitle2\" component = \"h1\" className = {classes.content}>\r\n                         {`Hello , ${currentuser.firstname} ${currentuser.lastname} (${currentuser.id}) (${role})`}\r\n                         </Typography>\r\n                         }\r\n                </Grid>\r\n                <Grid item>\r\n                    \r\n                    \r\n                    <IconButton  onClick = {handleClick}>\r\n                        <AccountCircleIcon  className = {classes.icon}/>\r\n                    </IconButton>\r\n                    <Menu id = \"profile-menu\" anchorEl = {profileMenu} open = {Boolean(profileMenu)} onClose = {handleClose}>\r\n                        <MenuItem ><Link to = \"/logout\">Logout</Link></MenuItem>\r\n                        </Menu> \r\n                    \r\n\r\n                </Grid>\r\n                <Grid item>\r\n                </Grid>\r\n            </Grid>\r\n        </Toolbar>\r\n    </AppBar></div>\r\n} \r\n\r\nexport default withRouter(Header);\r\n\r\n\r\n\r\n/*\r\n<IconButton>\r\n                        <Badge badgeContent = {4} color = \"primary\">\r\n                        <NotificationsIcon className = {classes.icon} />\r\n                        </Badge>\r\n                    </IconButton>*/","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\LoginForm.js",["216","217","218","219","220","221","222"],"import {useEffect, useState} from \"react\";\r\nimport Controls from \"./Controls\";\r\nimport {Grid, InputAdornment, makeStyles, Snackbar} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {login} from \"../RestServices/RestDataSource\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { closeAuthentication, giveAuthentication } from \"../store/stateActions\";\r\nconst serverErrorInitialValues = {\r\n    error : false,\r\n    errormessage : \"\"\r\n}\r\n\r\nconst initialValues = {\r\n    username : \"\",\r\n    password : \"\"\r\n}\r\n\r\nconst initialUser = {\r\n    id : \"\",\r\n    username : \"\",\r\n    role : \"\"\r\n}\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        marginTop : \"20px\",\r\n        textAlign : \"center\"\r\n    },\r\n    userlogo : {\r\n        fontSize : \"150px\",\r\n        color : \"#1a237e\"\r\n    },\r\n    formerror : {\r\n        width : \"45%\",\r\n        margin : \"0\",\r\n        marginTop : \"-50px\",\r\n        padding : \"0\",\r\n        position : \"fixed\",\r\n        textAlign : \"center\"\r\n    }\r\n})\r\nconst LoginForm = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [user,setUser] = useState(initialUser);\r\n    const [serverError,setServerError] = useState(serverErrorInitialValues)\r\n    const classes = useStyles();\r\n    const [formValues, setFormValues] = useState(initialValues);\r\n    const [formError, setError] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setServerError({});\r\n        const {name,value} = e.target;\r\n        let values = {...formValues,[name]: value}\r\n        setFormValues(values);\r\n        validate({[name] : value});\r\n    }\r\n\r\n\r\n    const validate = (formData = formValues) => {\r\n        let temp = {...formError};\r\n        temp.username = \"\";\r\n\r\n        if(\"username\" in formData) {\r\n\r\n            temp.username = formData.username ? ((/$^|.+@.+..+/).test(formData.username) ? \"\" : \"Please enter a valid email address\") : \"This field is required\";\r\n        }\r\n        if(\"password\" in formData){\r\n            temp.password = formData.password.length < 8 ? \"Please Enter a valid password\": \"\";\r\n        }\r\n\r\n        setError({\r\n            ...temp\r\n        })\r\n\r\n        return Object.values(temp).every(x => x=== \"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(JSON.stringify(user));\r\n        if(user.id) {\r\n             console.log(\"Effect change\" + JSON.stringify(user));\r\n                dispatch(giveAuthentication(user));\r\n            }},[user]\r\n   );\r\n    const handleSubmit = (e) => {\r\n        setUser({});\r\n        e.preventDefault();\r\n        if(validate(formValues)){\r\n            setFormValues(initialValues);\r\n            login(formValues,setUser,setServerError);\r\n            alert(\"FormSuccessfully submitted\");\r\n        }else{\r\n            alert(\"Please enter the required fields\");\r\n\r\n        }\r\n    }\r\n\r\n    const closeServerError = () => {\r\n        setServerError({\r\n            error : false,\r\n            errormessage : \"\"\r\n        })\r\n    }\r\n\r\n    return <>\r\n            {serverError.errormessage && <div className = {classes.formerror} ><Alert elevation = {6} severity = \"error\" >\r\n                    {`${serverError.errormessage}`}</Alert></div>} \r\n    \r\n    <Controls.Form onSubmit = {handleSubmit}>\r\n        <Grid container>\r\n            <Grid item sm className = {classes.button}>\r\n               <AccountCircleIcon className = {classes.userlogo} />\r\n               <Typography component = \"h2\" variant = \"subtitle\" align = \"center\" color = \"primary\"> \r\n                    Login Form\r\n                </Typography>\r\n                \r\n            </Grid>\r\n            <Grid item xs = {12} sm = {12} >\r\n                <Controls.Input variant = \"outlined\" \r\n                label = \"Username\"\r\n                name = \"username\"\r\n                value = {formValues.username} \r\n                onChange = {handleChange}\r\n                error = {formError.username}\r\n              \r\n                />\r\n            </Grid>\r\n            <Grid item xs = {12} sm = {12} >\r\n                <Controls.Input variant = \"outlined\" \r\n                label = \"Password\"\r\n                name = \"password\"\r\n                type = \"password\"\r\n                value = {formValues.password} \r\n                onChange = {handleChange}\r\n                error = {formError.password}/>\r\n            </Grid>\r\n        \r\n            <Grid item xs = {12} sm = {12}>\r\n                \r\n                <div className = {classes.button}><Controls.Button \r\n                StartIcon = {ExitToAppIcon}\r\n                type = \"submit\"\r\n                >Login</Controls.Button></div>\r\n            </Grid>\r\n        \r\n        \r\n        </Grid>\r\n    </Controls.Form>      \r\n    </>\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\SideNav.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Button.js",["223","224"],"\r\nimport { Button as MuiButton, IconButton } from '@material-ui/core';\r\nexport default function Button(props) {\r\n    const {variant = \"contained\", color = \"primary\", size = \"large\", StartIcon = <></>, endIcon=<></>, ...others } = props;\r\n    return <MuiButton\r\n        variant={variant}\r\n        color={color}\r\n        size={size}\r\n        startIcon={<StartIcon/>}\r\n        endIcon={null}\r\n        {...others}\r\n        \r\n    >\r\n        {props.children}\r\n    </MuiButton>\r\n}","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\initialData.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\dataTypes.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\store\\actionTypes.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\index.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\RestServices\\RestDataSource.js",["225"],"import {\r\n    BOOKDESCRIPTION_URL,\r\n    BOOKSTORE_URL,\r\n    LIBRARIAN_URL,\r\n    ADDRESS_URL,\r\n    USERS_URL,\r\n    LOGIN_URL,\r\n    BOOKMANAGER_URL\r\n} from \"../server/serverURL\";\r\n\r\nimport {\r\n    LIBRARIAN,\r\n    USERS,\r\n    ADDRESS,\r\n    BOOKSTORE,\r\n    BOOKMANAGER,\r\n    BOOKDESCRIPTION,\r\n    CURRENTUSERADDRESS\r\n} from \"../store/dataTypes\";\r\n\r\nexport const login = (user,callback,errorcallback,) => {\r\n    let loginObj =  user;\r\n    try {\r\n\r\n        console.log(loginObj.username);\r\n        fetch(`${LOGIN_URL}/${loginObj.username}`).then((data) => {\r\n            console.log(JSON.stringify(data));\r\n            if (data.status > 400) {\r\n                console.log(JSON.stringify(data));\r\n                throw new Error(\"Username not existed\");\r\n            }\r\n            console.log(JSON.stringify(data));\r\n            return data.json();\r\n        }).then((data) => successlogin(data,loginObj,callback), (err) => { console.log(err);errorcallback({error: true,errormessage : \"Username not existed\"}) }).catch(err => errorcallback({error: true,errormessage : \"Username and password not matching\"}))\r\n}catch (err) {\r\n        console.log(\"Error occurs at server Side\");\r\n    }}\r\n\r\n    const successlogin = (data,loginObj,callback,errorcallback) => {\r\n        console.log(JSON.stringify(data));\r\n        console.log(JSON.stringify(loginObj));\r\n        if (data.password === loginObj.password) {\r\n            console.log(\"This is the prop\");\r\n           callback(data);\r\n        } else {\r\n            errorcallback({error : \"true\",errormessage : \"Username and password not matching\"})\r\n        }\r\n\r\n    }\r\n\r\n    const sendRequest = (method,url,callback,data) =>{\r\n        let body;\r\n        if(method === \"GET\" || method === \"DELETE\"){\r\n            body = null;\r\n        }else{\r\n            body = JSON.stringify(data);\r\n        }\r\n\r\n    \r\n        try{\r\n           fetch(url,{\r\n                method : method,\r\n                body : body,\r\n                headers : {\r\n                    \"content-type\" : \"application/json\"\r\n                }\r\n            }).then(response => {\r\n                if(response.status > 400){\r\n                    console.log(JSON.stringify(response));\r\n                    throw new Error(\"Server error\");\r\n                }\r\n                return response.json();\r\n            }).catch(err => console.log(err))\r\n            .then(data => callback(data)).catch(err => console.log(err))\r\n        }catch(err){\r\n            console.log(\"Some error occurs\");\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    export const saveUserLogin = (userLogin) => {\r\n        sendRequest(\"POST\",LOGIN_URL,() => {console.log(\"Successfully saved\")},userLogin);\r\n    }\r\n\r\n    export const saveUserDetails = (userDetails) => {\r\n        sendRequest(\"POST\",USERS_URL,(data) => console.log(JSON.stringify(data)),userDetails);\r\n    }\r\n\r\n    export const saveUserAddress = (userAddress) => {\r\n        sendRequest(\"POST\",ADDRESS_URL,() => console.log(\"Successfully saved\"),userAddress)\r\n    }\r\n\r\n    export const saveBookManager = (bookManager) => {\r\n        sendRequest(\"POST\",BOOKMANAGER_URL,() => console.log(\"Successfully saved\"),bookManager)\r\n    }\r\n\r\n    export const GetData = (dataType,callback,id) => {\r\n        switch(dataType){\r\n            case LIBRARIAN:\r\n                sendRequest(\"GET\",`${LIBRARIAN_URL}/${id}`,callback,null)\r\n                break;\r\n            case USERS:\r\n                if(id === \"\"){\r\n                    sendRequest(\"GET\",`${USERS_URL}`,callback,null);    \r\n                }\r\n                else{\r\n                    sendRequest(\"GET\",`${USERS_URL}/${id}`,callback,null);\r\n                }\r\n                 break;\r\n            case ADDRESS:\r\n                sendRequest(\"GET\",`${ADDRESS_URL}`,callback,null);\r\n                break;\r\n            case BOOKSTORE:\r\n                sendRequest(\"GET\",BOOKSTORE_URL,callback,null);\r\n                break;\r\n            case BOOKMANAGER:\r\n                sendRequest(\"GET\",BOOKMANAGER_URL,callback,null);\r\n                break;\r\n            case BOOKDESCRIPTION:\r\n                sendRequest(\"GET\",BOOKDESCRIPTION_URL,callback,null);\r\n                break;\r\n            case CURRENTUSERADDRESS:\r\n                sendRequest(\"GET\",`${ADDRESS_URL}/${id}`,callback,null);\r\n                break;\r\n            default:\r\n                console.log(\"Not a valid operation\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    export const UpdateData = (dataType,callback,id,body) => {\r\n         switch(dataType){\r\n            case LIBRARIAN:\r\n                sendRequest(\"PUT\",`${LIBRARIAN_URL}/${id}`,callback,body)\r\n                break;\r\n            case USERS:\r\n                sendRequest(\"PUT\",`${USERS_URL}/${id}`,callback,body);\r\n                break;\r\n            case ADDRESS:\r\n                sendRequest(\"PUT\",`${ADDRESS_URL}/${id}`,callback,body);\r\n                break;\r\n            case BOOKSTORE:\r\n                sendRequest(\"PUT\", `${BOOKSTORE_URL}/${id}`,callback,body);\r\n                break;\r\n            case BOOKMANAGER:\r\n                sendRequest(\"PUT\",`${BOOKMANAGER_URL}/${id}`,callback,null);\r\n                break;\r\n            case BOOKDESCRIPTION:\r\n                sendRequest(\"PUT\",`${BOOKDESCRIPTION_URL}/${id}`,callback,null);\r\n                break;\r\n            default:\r\n                console.log(\"Not a valid operations\");\r\n                break;\r\n           \r\n        }\r\n    }\r\n\r\n    export const createData = (dataType,callback,body) => {\r\n        switch(dataType){\r\n            case LIBRARIAN:\r\n                sendRequest(\"POST\",`${LIBRARIAN_URL}`,callback,body)\r\n                break;\r\n            case USERS:\r\n                sendRequest(\"POST\",`${USERS_URL}`,callback,body);\r\n                break;\r\n            case ADDRESS:\r\n                sendRequest(\"POST\",`${ADDRESS_URL}`,callback,body);\r\n                break;\r\n            case BOOKSTORE:\r\n                sendRequest(\"POST\", `${BOOKSTORE_URL}`,callback,body);\r\n                break;\r\n            case BOOKMANAGER:\r\n                sendRequest(\"POST\",`${BOOKMANAGER_URL}`,callback,body);\r\n                break;\r\n            case BOOKDESCRIPTION:\r\n                sendRequest(\"POST\",`${BOOKDESCRIPTION_URL}`,callback,body);\r\n                break;\r\n            default:\r\n                console.log(\"Not a valid operations\");\r\n                break;\r\n           \r\n        }\r\n    }\r\n\r\n\r\n    const saveBook = (data) => {\r\n        const apiURL = \"http://localhost:3500/bookstore/\" + data.id;\r\n        try{\r\n            fetch(apiURL, {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    \"content-type\": \"application/json\"\r\n                }\r\n            }).then(data => {\r\n                if (data.status > 400) {\r\n                    throw new Error(\"Already exists\");\r\n                }\r\n                return data.json()\r\n            }).then(data => console.log(\"Data Stored Successfully\")).catch(err => console.log(err));\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n    }\r\n\r\n\r\n","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Table.js",["226","227"],"import UserRegistrationForm from \"./UserRegistrationForm\";\r\nimport React,{useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { Grid,TableHead, withStyles } from '@material-ui/core';\r\nimport UserBookTable from \"./TableContent\";\r\nimport SearchIcon from \"./utils/SearchIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Select from \"../Components/Controls/Select\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  divi : {\r\n      margin : \"2px\",\r\n      padding : \"3px\",\r\n      textAlign : 'center'\r\n  }\r\n});\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root : {\r\n        margin : theme.spacing(4),\r\n        \r\n    },\r\n    textStyle : {\r\n        backgroundColor : \"blue\",\r\n        fontColor : \"white\",\r\n       \r\n\r\n    }\r\n}))\r\n\r\nconst usersTableSearchOptions = [\r\n  {id : \"id\",value : \"id\" , label : \"User ID\"},\r\n  {id : \"name\",value : \"name\",label : \"Name\"}\r\n]\r\nconst userSearchOptions = [\r\n  {id: \"id\",value : \"id\",label : \"ID\"},\r\n  {id: \"Title\",value : \"title\",label : \"Title\"},\r\n  {id: \"subject\",value : \"subject\",label : \"Subject\"}\r\n];\r\nconst librarianSearchOptions = [\r\n  ...userSearchOptions,\r\n  {id : \"status\",value : \"status\",label : \"Status\"},\r\n  {id : \"userid\",value : \"userid\",label : \"User Id\"}\r\n];\r\nexport default function CustomPaginationActionsTable(props) {\r\n\r\n  const rows = useSelector(state => state.modelData.bookstore);\r\n  console.log(rows);\r\n  const {headers} = props;\r\n  const classes = useStyles2();\r\n  const myclasses = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const role = useSelector(state => state.stateData.role);\r\n  const [length,setLength] = useState(rows ? rows.filter(p=>p.status === props.category).length : 0);\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, length - page * rowsPerPage);\r\n  const [searchValue,setSearch] = useState();\r\n  const [category,setCategory] = useState(\"title\")\r\n  \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  \r\n  \r\n  \r\n  return (<React.Fragment>\r\n\r\n    <Grid container>\r\n      <Grid item sm = {1}>\r\n\r\n      </Grid>\r\n    <Grid item>\r\n     \r\n     {role === \"user\" && props.category !== \"users\" && <Select id = \"category\" name = \"category\" variant = \"filled\" label = \"category\" onChange = {(e) => setCategory(e.target.value)} \r\n    value = {category} items = {userSearchOptions} />}\r\n    {role === \"librarian\" && props.category !== \"users\" && <Select id = \"category\" name = \"category\" variant = \"filled\" label = \"category\" onChange = {(e) => setCategory(e.target.value)} \r\n    value = {category} items = {librarianSearchOptions} />}\r\n    {props.category === \"users\" && <Select id = \"category\" name = \"category\" variant = \"filled\" label = \"category\" onChange = {(e) => setCategory(e.target.value)} \r\n    value = {category} items = {usersTableSearchOptions} />}\r\n      </Grid>\r\n    \r\n      <Grid item sm>\r\n      <SearchIcon name = \"search\" onChange = {setSearch} value = \"searchValue\"/>\r\n      </Grid>\r\n     \r\n      </Grid>\r\n    <Paper className = {myclasses.root}><TableContainer component={Paper}>\r\n        \r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n      <TableHead className = {myclasses.textStyle}>\r\n          <TableRow>\r\n          {headers.map(p => \r\n            <StyledTableCell align = \"center\" key = {p}>{p}</StyledTableCell>)}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        <UserBookTable setLength = {setLength} searchValue = {searchValue} searchCategory = {category} category = {props.category} setRefresh = {props.setRefresh} emptyRows = {emptyRows} page = {page} rowsPerPage = {rowsPerPage}/>\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={7}\r\n              count={length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer></Paper>\r\n    </React.Fragment>);\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head : {\r\n        backgroundColor : theme.palette.common.blue,\r\n        color : theme.palette.common.white\r\n    },\r\n    body: {\r\n        fontSize : 14\r\n    }\r\n}))(TableCell);\r\n\r\n","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Controls.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Select.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\server\\serverURL.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\SearchIcon.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\TableContent.js",["228","229","230","231","232"],"import { useState } from \"react\";\r\nimport StyledTableRow from \"./utils/StyledTableRow\";\r\nimport { updateBook } from \"../store/actionCreators\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { List, ListItem, ListItemIcon, ListItemText, makeStyles,TableRow} from \"@material-ui/core\";\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TableCell } from '@material-ui/core';\r\nimport Rating from \"./utils/Rating\";\r\nimport { IconButton } from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ConfirmationCheck from \"./utils/ConfirmationCheck\";\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport BookDescription from \"./utils/BookDescription\";\r\nimport UserDescription from \"./utils/UserDescription\";\r\n\r\nconst initialDescriptionData = {\r\n  id: \"\",\r\n  booktitle: \"\",\r\n  author: \"\",\r\n  publisher: \"\",\r\n  description: \"\",\r\n  category: \"\",\r\n  hardcover: 0\r\n\r\n\r\n\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  }\r\n})\r\nconst UserBookTable = (props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const rows = useSelector(data => data.modelData.bookstore);\r\n  const role = useSelector(data => data.stateData.role);\r\n  const userId = useSelector(data => data.stateData.currentuser);\r\n  const users = useSelector(data => data.modelData.users);\r\n  const address = useSelector(data => data.modelData.address);\r\n  const bookdescription = useSelector(data => data.modelData.bookdescription);\r\n  const [opendescription, setOpenDescription] = useState(false);\r\n  const [description, setDescription] = useState(initialDescriptionData);\r\n  const [openuserdescription,setOpenUserDescription] = useState(false)\r\n  const [confirm,setConfirmation] = useState({confirmwindow : false,type: \"\",confirmmsg : \"Are you Sure\"});\r\n  const [book,setBook] = useState({});\r\n  const { emptyRows, page, rowsPerPage,category ,searchValue,searchCategory} = props;\r\n  let myrows = rows ? rows : [];\r\n  \r\n    \r\n  \r\n  if(role === \"user\"){\r\n    myrows = rows ? rows.filter(p => p.status === category) : [];\r\n\r\n \r\n    if(category === \"Reserved\" || category === \"Checked Out\"){\r\n      myrows = myrows.filter(p => p.userid === userId);\r\n    }\r\n\r\n  }else{\r\n    if(category === \"status\"){\r\n      myrows = rows.filter(p => (p.status === \"Reserved\" || p.status === \"Checked Out\"));\r\n    }\r\n    if(category === \"allbooks\"){\r\n      myrows = rows\r\n    }\r\n    if(category === \"users\"){\r\n      myrows = users ? users[0] : []\r\n    }\r\n\r\n  }\r\n\r\n    \r\n   \r\n    \r\n    \r\n    if(searchValue !== undefined ){\r\n      switch(searchCategory){\r\n        case \"id\":{\r\n          myrows = myrows.filter(p => p.id.toLowerCase().includes(searchValue.toLowerCase()));\r\n          break;\r\n        }\r\n        case \"title\":{\r\n          myrows = myrows.filter(p => p.booktitle.toLowerCase().includes(searchValue.toLowerCase()));\r\n          break;\r\n        }\r\n        case \"subject\":{\r\n          let subjectBooks = bookdescription.filter(p => p.category.split(\",\").some(p => {console.log(p); return p.toLowerCase().includes(searchValue.toLowerCase())})).map(p => p.id);\r\n          myrows = myrows.filter(p => subjectBooks.includes(p.id));\r\n          break;\r\n        }\r\n\r\n        case \"status\": \r\n          myrows = myrows.filter(p => p.status.toLowerCase().includes(searchValue.toLowerCase()));\r\n          break;\r\n\r\n        case \"userid\": \r\n          console.log(searchValue);\r\n          myrows = myrows.filter(p => p.userid.toLowerCase().includes(searchValue.toLowerCase()));\r\n          break;\r\n\r\n        case \"name\" :\r\n          myrows = myrows.filter(p => (p.firstname + \" \" + p.lastname).toLowerCase().includes(searchValue.toLowerCase()))\r\n          break;\r\n        }\r\n  \r\n      \r\n    }\r\n  \r\n\r\n\r\n    props.setLength(myrows.length);\r\n  \r\n\r\n  const reserveorCheckoutBook = (type,userid = userId) => {\r\n    let result = new Date();\r\n    result.setDate(new Date().getDate() + 13);\r\n    console.log(result);\r\n    //setReserve(false);\r\n    let newbook = { ...book, userid: userid, status: type };\r\n    dispatch(updateBook(newbook));\r\n    setConfirmation({confirmwindow : false,type: \"\",confirmmsg : \"\"});\r\n\r\n\r\n  }\r\n\r\n \r\n\r\n\r\n  const handelUserDescription = (data) =>{\r\n    console.log(users);\r\n    console.log(address);\r\n    setOpenUserDescription(true);\r\n\r\n    let user;\r\n    if(users[0] !== undefined){\r\n      user = users[0].find(p => p.id === data.userid);\r\n    }\r\n    let useraddress = address.find(p => p.id === data.userid);\r\n    console.log(user);\r\n    console.log(useraddress);\r\n    setDescription({...user, ...useraddress});\r\n    console.log(description);\r\n  }\r\n\r\n  const handleDescription = (data) => {\r\n    setOpenDescription(true);\r\n    setDescription(bookdescription.find((currentValue, index, arr) => currentValue.id === data.id));\r\n  }\r\n\r\n  const handleReserve = (row) => {\r\n      setBook(row);\r\n      setConfirmation({confirmwindow : true,type : \"Reserved\" ,confirmmsg : \"Are you Sure to Add this book to your reserved list?\"});\r\n  }\r\n\r\n  const handleCheckout = (row) => {\r\n    setBook(row);\r\n    setConfirmation({confirmwindow : true,type : \"Checked Out\" ,confirmmsg : \"Are you Sure to check out  this book?\"});\r\n  }\r\n\r\n  const handleRemove = (row) => {\r\n    setBook(row);\r\n    setConfirmation({confirmwindow : true,userid : \"\",type : \"Available\" ,confirmmsg : \"Are you Sure to remove  this book?\"});\r\n  }\r\n\r\n  \r\n\r\n  const handleClose = () => {\r\n    setBook({});\r\n    setConfirmation({confirmwindow : false,type: \"\",confirmmst : \"\"});\r\n  }\r\n  return <>\r\n    {(rowsPerPage > 0\r\n      ? myrows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n      : myrows\r\n    ).map((row, index) => {\r\n\r\n     \r\n      return <StyledTableRow key={row.id}>\r\n        <TableCell>{page * rowsPerPage + index + 1} </TableCell>\r\n        {(role === \"librarian\" || category === \"Reserved\" || category === \"Checked Out\") &&<TableCell align=\"center\">\r\n          {row.id}\r\n        </TableCell> }\r\n        {category !== \"users\" && <TableCell align=\"left\" onClick={() => handleDescription(row)}>\r\n          {row.booktitle} \r\n        </TableCell>}\r\n        {category === \"Available\" && <TableCell align=\"center\">\r\n          <Rating review={row.customerreviews} />\r\n        </TableCell> }\r\n        {((role === \"user\" && category  !== \"Checked Out\") || (role === \"librarian\" && category === \"allbooks\")) && <TableCell align=\"center\">\r\n          {row.position}\r\n        </TableCell>}\r\n        {(category === \"Available\" || role === \"librarian\") && (category !== \"users\")  && <TableCell align=\"center\">\r\n          {row.status === \"Checked Out\" && <Alert severity=\"error\">{row.status}</Alert>}\r\n          {row.status === \"Reserved\" && <Alert severity=\"warning\">{row.status}</Alert>}\r\n          {row.status === \"Available\" && <Alert severity=\"success\">Available</Alert>}\r\n        </TableCell>}\r\n        {role === \"user\" && <TableCell align=\"center\">\r\n          {category === \"Available\" && <><IconButton onClick={() => handleReserve(row)}>\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleCheckout(row)}>\r\n            <LibraryAddCheckIcon />\r\n          </IconButton></>}\r\n          {category !== \"Available\" && <><IconButton onClick={() => handleRemove(row)}>\r\n            <RemoveCircleIcon />\r\n          </IconButton>\r\n          </>}\r\n        </TableCell>}\r\n        {category !== \"users\" && role === \"librarian\" && <TableCell align = \"center\" onClick = {() => handelUserDescription(row)}>\r\n            {row.userid}\r\n          </TableCell>}\r\n        {category === \"users\" && <><TableCell align = \"center\" onClick = {() =>  handelUserDescription({userid : row.id})} >\r\n            {row.firstname} {row.lastname}\r\n          </TableCell>\r\n          <TableCell align = \"center\" >\r\n            {address.find(p => p.id === row.id).contactno}\r\n          </TableCell>\r\n          <TableCell align = \"center\" >\r\n          <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n             {rows.filter(p => p.userid === row.id).map(p => \r\n              <><ListItem button onClick = {() => handleDescription(p)}>\r\n                <ListItemIcon>\r\n                  <StarIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={p.booktitle} secondary = {p.status} />\r\n              </ListItem>\r\n            </>\r\n            )}\r\n            </List>\r\n          </TableCell>\r\n          </>}\r\n      </StyledTableRow>\r\n})}\r\n\r\n    {emptyRows > 0 && (\r\n      <TableRow style={{ height: 53 * emptyRows }}>\r\n        <TableCell colSpan={7} />\r\n      </TableRow>\r\n    )}\r\n\r\n      <UserDescription opendescription = {openuserdescription} description = {description} setOpenDescription = {setOpenUserDescription} />\r\n      <BookDescription opendescription = {opendescription} description= {description} setOpenDescription  = {setOpenDescription} />\r\n      <ConfirmationCheck open = {confirm.confirmwindow} confirm = {confirm} handleClose = {handleClose} reserveorCheckoutBook = {reserveorCheckoutBook} />\r\n   \r\n\r\n  </>\r\n}\r\n\r\n\r\nexport default UserBookTable;\r\n\r\n","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\UserRegistrationForm.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\CheckBox.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Radio.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\UserDescription.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\BookDescription.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\ConfirmationCheck.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\Rating.js",["233"],"import StarIcon from '@material-ui/icons/Star';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\n\r\nexport default function rating(props){\r\n    const {review} = props;\r\n\r\n    let reviews = parseInt(review);\r\n        switch(reviews){\r\n            case 1: \r\n                return <><StarIcon /><StarOutlineIcon /><StarOutlineIcon /><StarOutlineIcon /><StarOutlineIcon /></>\r\n            case 2: \r\n                return <><StarIcon/><StarIcon/><StarOutlineIcon /><StarOutlineIcon /><StarOutlineIcon /></>\r\n            case 3: \r\n                return <><StarIcon/><StarIcon/><StarIcon /><StarOutlineIcon /><StarOutlineIcon /></>\r\n            case 4: \r\n                return <><StarIcon/><StarIcon/><StarIcon /><StarIcon /><StarOutlineIcon /></>\r\n            case 5:\r\n                return <><StarIcon /><StarIcon /><StarIcon /><StarIcon /><StarIcon /></>\r\n            \r\n            }\r\n    \r\n}","C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\utils\\StyledTableRow.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Form.js",[],"C:\\Users\\s.sivasan\\Desktop\\VSProjects\\librarymanagementsystem\\src\\Components\\Controls\\Input.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"242","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"238","severity":1,"message":"243","line":8,"column":35,"nodeType":"240","messageId":"241","endLine":8,"endColumn":45},{"ruleId":"238","severity":1,"message":"244","line":17,"column":10,"nodeType":"240","messageId":"241","endLine":17,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":18,"column":8,"nodeType":"247","endLine":18,"endColumn":10,"suggestions":"248"},{"ruleId":"238","severity":1,"message":"249","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":20},{"ruleId":"238","severity":1,"message":"250","line":2,"column":9,"nodeType":"240","messageId":"241","endLine":2,"endColumn":15},{"ruleId":"238","severity":1,"message":"251","line":2,"column":17,"nodeType":"240","messageId":"241","endLine":2,"endColumn":21},{"ruleId":"238","severity":1,"message":"252","line":2,"column":23,"nodeType":"240","messageId":"241","endLine":2,"endColumn":37},{"ruleId":"238","severity":1,"message":"253","line":2,"column":39,"nodeType":"240","messageId":"241","endLine":2,"endColumn":50},{"ruleId":"238","severity":1,"message":"254","line":2,"column":52,"nodeType":"240","messageId":"241","endLine":2,"endColumn":63},{"ruleId":"238","severity":1,"message":"255","line":2,"column":65,"nodeType":"240","messageId":"241","endLine":2,"endColumn":75},{"ruleId":"238","severity":1,"message":"256","line":2,"column":77,"nodeType":"240","messageId":"241","endLine":2,"endColumn":86},{"ruleId":"238","severity":1,"message":"257","line":2,"column":88,"nodeType":"240","messageId":"241","endLine":2,"endColumn":98},{"ruleId":"238","severity":1,"message":"258","line":2,"column":112,"nodeType":"240","messageId":"241","endLine":2,"endColumn":117},{"ruleId":"238","severity":1,"message":"259","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"260","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":25},{"ruleId":"238","severity":1,"message":"261","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":20},{"ruleId":"238","severity":1,"message":"262","line":2,"column":67,"nodeType":"240","messageId":"241","endLine":2,"endColumn":72},{"ruleId":"238","severity":1,"message":"263","line":2,"column":74,"nodeType":"240","messageId":"241","endLine":2,"endColumn":83},{"ruleId":"238","severity":1,"message":"264","line":2,"column":85,"nodeType":"240","messageId":"241","endLine":2,"endColumn":101},{"ruleId":"238","severity":1,"message":"265","line":2,"column":103,"nodeType":"240","messageId":"241","endLine":2,"endColumn":119},{"ruleId":"238","severity":1,"message":"266","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":25},{"ruleId":"238","severity":1,"message":"267","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":23},{"ruleId":"238","severity":1,"message":"259","line":9,"column":9,"nodeType":"240","messageId":"241","endLine":9,"endColumn":15},{"ruleId":"238","severity":1,"message":"268","line":3,"column":15,"nodeType":"240","messageId":"241","endLine":3,"endColumn":29},{"ruleId":"238","severity":1,"message":"269","line":3,"column":43,"nodeType":"240","messageId":"241","endLine":3,"endColumn":51},{"ruleId":"238","severity":1,"message":"270","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":16},{"ruleId":"238","severity":1,"message":"271","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":22},{"ruleId":"238","severity":1,"message":"272","line":12,"column":10,"nodeType":"240","messageId":"241","endLine":12,"endColumn":29},{"ruleId":"245","severity":1,"message":"246","line":88,"column":16,"nodeType":"247","endLine":88,"endColumn":22,"suggestions":"273"},{"ruleId":"238","severity":1,"message":"274","line":103,"column":11,"nodeType":"240","messageId":"241","endLine":103,"endColumn":27},{"ruleId":"238","severity":1,"message":"257","line":2,"column":31,"nodeType":"240","messageId":"241","endLine":2,"endColumn":41},{"ruleId":"238","severity":1,"message":"275","line":4,"column":89,"nodeType":"240","messageId":"241","endLine":4,"endColumn":96},{"ruleId":"238","severity":1,"message":"276","line":188,"column":11,"nodeType":"240","messageId":"241","endLine":188,"endColumn":19},{"ruleId":"238","severity":1,"message":"277","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":28},{"ruleId":"238","severity":1,"message":"244","line":2,"column":15,"nodeType":"240","messageId":"241","endLine":2,"endColumn":24},{"ruleId":"238","severity":1,"message":"278","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":16},{"ruleId":"238","severity":1,"message":"279","line":7,"column":18,"nodeType":"240","messageId":"241","endLine":7,"endColumn":31},{"ruleId":"238","severity":1,"message":"280","line":7,"column":33,"nodeType":"240","messageId":"241","endLine":7,"endColumn":46},{"ruleId":"238","severity":1,"message":"281","line":7,"column":48,"nodeType":"240","messageId":"241","endLine":7,"endColumn":59},{"ruleId":"282","severity":1,"message":"283","line":82,"column":7,"nodeType":"284","messageId":"285","endLine":109,"endColumn":10},{"ruleId":"282","severity":1,"message":"283","line":8,"column":9,"nodeType":"284","messageId":"285","endLine":20,"endColumn":14},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'UsersTable' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'FormControls' is defined but never used.","'Avatar' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'AccountCircleIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Badge' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'NotificationsIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'InputAdornment' is defined but never used.","'Snackbar' is defined but never used.","'SaveIcon' is defined but never used.","'AccountBoxIcon' is defined but never used.","'closeAuthentication' is defined but never used.",["289"],"'closeServerError' is assigned a value but never used.","'endIcon' is assigned a value but never used.","'saveBook' is assigned a value but never used.","'UserRegistrationForm' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [dispatch]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, user]",{"range":"296","text":"297"},[582,584],"[dispatch]",[2696,2702],"[dispatch, user]"]